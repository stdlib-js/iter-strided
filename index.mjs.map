{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport isPositiveInteger from '@stdlib/assert-is-positive-integer';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport isFunction from '@stdlib/assert-is-function';\nimport isIteratorLike from '@stdlib/assert-is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// VARIABLES //\n\nvar DEFAULT_OFFSET = 0;\nvar DEFAULT_EAGER = false;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which steps by a specified amount.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} stride - stride\n* @param {NonNegativeInteger} [offset=0] - offset\n* @param {boolean} [eager=false] - boolean indicating whether to eagerly advance the input iterator when provided a non-zero offset\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} fourth argument must be a boolean\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array-to-iterator';\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* var iter = iterStrided( arr, 2, 1 );\n*\n* var r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* r = iter.next().value;\n* // returns 5\n*\n* // ...\n*/\nfunction iterStrided( iterator, stride, offset, eager ) {\n\tvar iter;\n\tvar bool;\n\tvar FLG;\n\tvar idx;\n\tvar ret;\n\tvar o;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( '0Ct4J', iterator ) );\n\t}\n\tif ( !isPositiveInteger( stride ) ) {\n\t\tthrow new TypeError( format( '0Ct4I', stride ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( '0Ct2y', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tbool = DEFAULT_EAGER;\n\t} else if ( arguments.length > 3 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( '0Ct2y', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( !isBoolean( eager ) ) {\n\t\t\tthrow new TypeError( format( '0Ct4W', eager ) );\n\t\t}\n\t\tbool = eager;\n\t} else {\n\t\tidx = DEFAULT_OFFSET;\n\t\tbool = DEFAULT_EAGER;\n\t}\n\tif ( bool ) {\n\t\tfor ( i = 0; i < idx; i++ ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\tret = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// NOTE: if we've successfully advanced the input iterator, `i` is currently equal to `idx` (i.e., the offset)\n\t\ti -= 1;\n\t} else {\n\t\ti = -1;\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\to = idx;\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\tif ( ret ) {\n\t\t\t\tv = ret;\n\t\t\t\tret = null;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\twhile ( i < idx ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\ti += 1;\n\t\t}\n\t\tidx += stride;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t}\n\t\treturn v;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStrided( iterator[ iteratorSymbol ](), stride, o, bool );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterStrided;\n"],"names":["iterStrided","iterator","stride","offset","eager","iter","bool","FLG","idx","ret","o","v","i","isIteratorLike","TypeError","format","isPositiveInteger","arguments","length","isNonNegativeInteger","isBoolean","next","done","setReadOnly","end","iteratorSymbol","isFunction","factory","value"],"mappings":";;wwBAuEA,SAASA,EAAaC,EAAUC,EAAQC,EAAQC,GAC/C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAgBZ,GACrB,MAAM,IAAIa,UAAWC,EAAQ,QAASd,IAEvC,IAAMe,EAAmBd,GACxB,MAAM,IAAIY,UAAWC,EAAQ,QAASb,IAEvC,GAA0B,IAArBe,UAAUC,OAAe,CAC7B,IAAMC,EAAsBhB,GAC3B,MAAM,IAAIW,UAAWC,EAAQ,QAASZ,IAEvCK,EAAML,EACNG,EAxDkB,KAyDpB,MAAQ,GAAKW,UAAUC,OAAS,EAAI,CAClC,IAAMC,EAAsBhB,GAC3B,MAAM,IAAIW,UAAWC,EAAQ,QAASZ,IAGvC,GADAK,EAAML,GACAiB,EAAWhB,GAChB,MAAM,IAAIU,UAAWC,EAAQ,QAASX,IAEvCE,EAAOF,CACT,MACEI,EApEmB,EAqEnBF,EApEkB,MAsEnB,GAAKA,EAAO,CACX,IAAMM,EAAI,EAAGA,EAAIJ,EAAKI,IAErB,IADAD,EAAIV,EAASoB,QACNC,KAAO,CACbf,GAAM,EACNE,EAAME,EACN,KACA,CAGFC,GAAK,CACP,MACEA,GAAK,EAYN,OARAW,EADAlB,EAAO,CAAA,EACY,OAAQgB,GAC3BE,EAAalB,EAAM,SAAUmB,GAGxBC,GAAkBC,EAAYzB,EAAUwB,MAC5Cf,EAAIF,EACJe,EAAalB,EAAMoB,EAAgBE,IAE7BtB,EAQP,SAASgB,IACR,IAAIV,EACJ,GAAKJ,EACJ,OAAKE,GACJE,EAAIF,EACJA,EAAM,KACCE,GAED,CACNW,MAAQ,GAIV,IADAV,GAAK,EACGA,EAAIJ,GAAM,CAEjB,IADAG,EAAIV,EAASoB,QACNC,KAEN,OADAf,GAAM,EACCI,EAERC,GAAK,CACL,CAMD,OALAJ,GAAON,GACPS,EAAIV,EAASoB,QACNC,OACNf,GAAM,GAEAI,CACP,CASD,SAASa,EAAKI,GAEb,OADArB,GAAM,EACDU,UAAUC,OACP,CACNU,MAASA,EACTN,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASK,IACR,OAAO3B,EAAaC,EAAUwB,KAAoBvB,EAAQQ,EAAGJ,EAC7D,CACF"}